language: cpp

sudo: true

matrix:
  include:
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - ninja-build
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="OS='Trusty' && Coverage='On' && CXX='g++-7' && TYPE='Debug'"
      before_install:
        - eval "${MATRIX_EVAL}"
        - pip install --user cpp-coveralls
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
        - bash ./build-deps-unix.sh
        - echo $HOME/cmake_root/bin/cmake . -DCMAKE_BUILD_TYPE=$TYPE -DOPENBVE2_ON_TRAVIS=True -DOPENBVE2_CODE_COVERAGE=$Coverage -GNinja
        - $HOME/cmake_root/bin/cmake . -DCMAKE_BUILD_TYPE=Debug -DOPENBVE2_ON_TRAVIS=True -DOPENBVE2_CODE_COVERAGE=On -GNinja
      after_success:
        - coveralls --gcov gcov-7 -e dependencies -e libparsers/tests -e test_main -E '.*?CMakeFiles.*?' -E '.*?cotire.*?'

    - os: linux
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - ninja-build
            - gcc-5
            - g++-5
      env:
        - MATRIX_EVAL="OS='Precise' && LINKER='LD' && CXX=g++-5 && TYPE='Release'"
      before_install:
        - eval "${MATRIX_EVAL}"
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && $HOME/cmake_root/bin/cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja

    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - ninja-build
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="OS='Trusty' && LINKER='LD' && CXX=g++-7 && TYPE='Release'"
      before_install:
        - eval "${MATRIX_EVAL}"
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && $HOME/cmake_root/bin/cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja


    - os: linux
      dist: precise
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - ninja-build
            - libstdc++-5-dev
            - clang-3.6
      env:
        - MATRIX_EVAL="OS='Precise' && LINKER='LD' && CXX=clang++-3.6 && TYPE='Release'"
      before_install:
        - eval "${MATRIX_EVAL}"
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && $HOME/cmake_root/bin/cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja
          
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - ninja-build
            - libstdc++-5-dev
            - clang-6.0
      env:
        - MATRIX_EVAL="OS='Trusty' && LINKER='LD' && CXX=clang++-6.0 && TYPE='Release'"
      before_install:
        - eval "${MATRIX_EVAL}"
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && $HOME/cmake_root/bin/cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja
          
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - ninja-build
            - libstdc++-5-dev
            - clang-6.0
            - lld-6.0
      env:
        - MATRIX_EVAL="OS='Trusty' && LINKER='LLD' && CXX=clang++-6.0 && TYPE='Release'"
      before_install:
        - eval "${MATRIX_EVAL}"
      # Get Newer CMake
        - wget https://cmake.org/files/v3.10/cmake-3.10.1-Linux-x86_64.sh
        - mkdir $HOME/cmake_root
        - bash cmake-3.10.1-Linux-x86_64.sh --skip-license --prefix=$HOME/cmake_root --exclude-subdir
        - $HOME/cmake_root/bin/cmake --version
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && $HOME/cmake_root/bin/cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -DCMAKE_EXE_LINKER_FLAGS='-fuse-ld=lld' -DCMAKE_SHARED_LINKER_FLAGS='-fuse-ld=lld' -GNinja

    - os: osx
      osx_image: xcode6.4
      before_install:
        - brew update
        - HOMEBREW_NO_AUTO_UPDATE=1 brew upgrade cmake
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install ninja
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of stuff
        - mkdir build
        - cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja

    - os: osx
      osx_image: xcode9.2
      before_install:
        - brew update
        - HOMEBREW_NO_AUTO_UPDATE=1 brew upgrade cmake
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install ninja
      # Build Boost.... 
        - bash ./build-deps-unix.sh
      # Do rest of Stuff
        - mkdir build
        - cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBVE2_ON_TRAVIS=True -GNinja

script:
  - ninja
  - bin/test_parsers
